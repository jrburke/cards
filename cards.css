.cardsContainer,
.cards {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Set an explicit z-index of 0 so that .cardsContainer gets its own stacking
   context. Without this, the z-index usage inside it by .card nodes could lead
   to a z-index that is quite high and may hide other elements like dialogs,
   that could be placed outside .cardsContainer at a z-index value, but not with
   as high of value as the topmost card. Creating a stacking context for
   .cardsContainer avoids that by keeping the stacking context for the .card
   elements as a child context of this one. */
.cardsContainer {
  z-index: 0;
}

.card {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  transition-property: transform;
  transition-duration: .2s;
  transition-timing-function: ease;
  transition-delay: 0s;
}

.card.anim-fade {
  transition-property: opacity;
  transition-duration: .3s;
  transition-timing-function: ease;
  transition-delay: 0s;
}

.card.no-anim {
  transition-property: none;
}

.card.center {
  transform: translateX(0);
}

.card.center.anim-vertical {
  transform: translateY(0);
}

.card.center.anim-fade {
  opacity: 1;
}

.card.before {
  transform: translateX(-100%);
}

.card.before.anim-vertical {
  transform: translateY(100%);
}

.card.before.anim-fade {
  transform: translateX(0);
  opacity: 0;
}

.card.before.upflow.anim-vertical {
  transform: translateY(-100%);
}

.card.after {
  transform: translateX(100%);
}

.card.after.anim-vertical {
  transform: translateY(-100%);
}

.card.after.upflow.anim-vertical {
  transform: translateY(100%);
}

.card.after.anim-fade {
  transform: translateX(0);
  opacity: 0;
}
